<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innotek.system.dao.RoleRelDao">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.innotek.system.entity.RoleRel">
		<result column="id" property="id" />
		<result column="role_id" property="roleId" />
		<result column="obj_id" property="objId" />
		<result column="rel_type" property="relType" />
		<result column="created_by" property="createdBy" />
		<result column="updated_by" property="updatedBy" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
	</resultMap>

	<!-- dictionary table all fields -->
	<sql id="Base_Column_List">
		role_id,
		obj_id,
		rel_type,
		created_by,
		updated_by,
		create_time,
		update_time,
		id
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="roleId != null ">
				and role_id = #{roleId}
			</if>
			<if test="objId != null ">
				and obj_id = #{objId}
			</if>
			<if test="relType != null ">
				and rel_type = #{relType}
			</if>
			<if test="createdBy != null and createdBy != ''">
				and created_by like CONCAT('%',#{createdBy},'%')
			</if>
			<if test="updatedBy != null and updatedBy != ''">
				and updated_by like CONCAT('%',#{updatedBy},'%')
			</if>
			<if test="createTime != null and createTime != ''">
				and create_time like CONCAT('%',#{createTime},'%')
			</if>
			<if test="updateTime != null and updateTime != ''">
				and update_time like CONCAT('%',#{updateTime},'%')
			</if>
		</trim>
	</sql>

	<!-- 插入记录 -->
	<insert id="add" parameterType="Object">
		<selectKey resultType="java.lang.String" order="BEFORE"
			keyProperty="id">
			SELECT UUID() as ID
		</selectKey>
		insert into BASE_ROLE_REL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_time,
			<if test="id != null ">
				id,
			</if>
			<if test="roleId != null ">
				role_id,
			</if>
			<if test="objId != null ">
				obj_id,
			</if>
			<if test="relType != null ">
				rel_type,
			</if>
			<if test="createdBy != null ">
				created_by,
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			now(),
			<if test="id != null ">
            <![CDATA[  #{id}, ]]>
			</if>
			<if test="roleId != null ">
				#{roleId},
			</if>
			<if test="objId != null ">
				#{objId},
			</if>
			<if test="relType != null ">
				#{relType},
			</if>
			<if test="createdBy != null ">
				#{createdBy},
			</if>
		</trim>
	</insert>

	<!-- 根据id，修改记录 -->
	<update id="update" parameterType="Object">
		update BASE_ROLE_REL set
		<trim suffixOverrides=",">
			update_time = now(),
			<if test="roleId != null ">
				role_id = #{roleId},
			</if>
			<if test="objId != null ">
				obj_id = #{objId},
			</if>
			<if test="relType != null ">
				rel_type = #{relType},
			</if>
			<if test="updatedBy != null ">
				updated_by = #{updatedBy},
			</if>
		</trim>
		where id= #{id}
	</update>

	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from BASE_ROLE_REL where id = #{id}
	</delete>

	<!-- 根据id查询 -->
	<select id="queryById" resultMap="BaseResultMap" parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from BASE_ROLE_REL where id = #{id}
	</select>

	<!-- 列表总数 -->
	<select id="queryByCount" resultType="java.lang.Integer"
		parameterType="Object">
		select count(1) from BASE_ROLE_REL
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 查询列表 -->
	<select id="queryByList" resultMap="BaseResultMap"
		parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from BASE_ROLE_REL
		<include refid="Example_Where_Clause" />
		<if test="pager.orderCondition != null and pager.orderCondition != ''">
			${pager.orderCondition}
		</if>
		<if
			test="pager.mysqlQueryCondition != null and pager.mysqlQueryCondition != ''">
			${pager.mysqlQueryCondition}
		</if>
	</select>
	<!-- *************************************自定义接口****************************************************** -->

	<!-- 根据角色id查询 -->
	<select id="queryListByRoleId" resultType="String" parameterType="Object">
		SELECT obj_id FROM BASE_ROLE_REL
		WHERE role_id = #{id} AND rel_type = #{type}
	</select>

	<!-- 根据角色Id删除其权限 -->
	<delete id="deleteByRoleId" parameterType="Object">
		delete from BASE_ROLE_REL where role_id = #{id}
	</delete>

	<!-- 根据角色id和类型删除权限 -->
	<delete id="deleteByRoleIdAndRelType" parameterType="Object">
		delete from BASE_ROLE_REL where role_id = #{roleId} AND rel_type =
		#{relType}
	</delete>

	<!-- 根据用户id删除原来的角色权限 -->
	<delete id="deleteByUserId" parameterType="Object">
		delete from BASE_ROLE_REL where obj_id = #{id} and rel_type = 1
	</delete>

	<!-- 根据ObjId和RelType删除角色关联信息 -->
	<select id="deleteRoleByObjIdAndRelType" parameterType="Object">
		delete from BASE_ROLE_REL where obj_id =#{objId} and rel_type =
		#{relType}
	</select>

	<!-- 跟据ObjId和RelType查询角色信息 -->
	<select id="queryRoleByObjId" resultType="String" parameterType="Object">
		select role_id from BASE_ROLE_REL where obj_id =#{id} and rel_type =
		#{relType}
	</select>
	
	<!-- 查询该登录用户ID和角色ID -->
	<select id="queryUserIdAndRoleId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT t.ROLE_ID,t.OBJ_ID FROM base_role_rel t
		LEFT JOIN base_user t1 ON t.obj_id = t1.ID
		WHERE t.REL_TYPE=1 AND t1.id = #{_parameter}
		LIMIT 1
	</select>
	
	<!-- 查询扭转对象用户ID和角色ID -->
	<select id="queryReverseUserIdAndReverseRoleId" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT t.ROLE_ID,t.OBJ_ID FROM base_role_rel t 
		LEFT JOIN base_user t1 ON t.obj_id = t1.ID
		LEFT JOIN base_role t2 ON t.role_id = t2.id 
		WHERE t.REL_TYPE=1 
		  AND t2.id = #{_parameter}
	</select>
</mapper>   
