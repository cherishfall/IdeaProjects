<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.innotek.system.dao.RoleDao">
	<!-- Result Map -->
	<resultMap id="BaseResultMap" type="com.innotek.system.entity.Role">
		<result column="id" property="id" />
		<result column="role_name" property="roleName" />
		<result column="role_desc" property="roleDesc" />
		<result column="created_by" property="createdBy" />
		<result column="updated_by" property="updatedBy" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="role_level" property="roleLevel" />
	</resultMap>

	<!-- dictionary table all fields -->
	<sql id="Base_Column_List">
		role_name,
		role_desc,
		created_by,
		updated_by,
		create_time,
		update_time,
		role_level,
		id
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
		<trim suffixOverrides=",">
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="roleName != null and roleName != ''">
				and role_name = #{roleName}
			</if>
			<if test="roleDesc != null and roleDesc != ''">
				and role_desc like CONCAT('%',#{roleDesc},'%')
			</if>
			<if test="createdBy != null and createdBy != ''">
				and created_by like CONCAT('%',#{createdBy},'%')
			</if>
			<if test="updatedBy != null and updatedBy != ''">
				and updated_by like CONCAT('%',#{updatedBy},'%')
			</if>
			<if test="createTime != null and createTime != ''">
				and create_time like CONCAT('%',#{createTime},'%')
			</if>
			<if test="updateTime != null and updateTime != ''">
				and update_time like CONCAT('%',#{updateTime},'%')
			</if>
			<if test="roleLevel != null">
				and role_level > #{roleLevel}
			</if>
		</trim>
	</sql>

	<!-- 插入记录 -->
	<insert id="add" parameterType="Object">
		<selectKey resultType="java.lang.String" order="BEFORE"
			keyProperty="id">
			SELECT UUID() as ID
		</selectKey>
		insert into BASE_ROLE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_time,
			<if test="id != null ">
				id,
			</if>
			<if test="roleName != null ">
				role_name,
			</if>
			<if test="roleDesc != null ">
				role_desc,
			</if>
			<if test="createdBy != null ">
				created_by,
			</if>
			<if test="roleLevel != null ">
				role_level,
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			now(),
			<if test="id != null ">
            <![CDATA[  #{id}, ]]>
			</if>
			<if test="roleName != null ">
				#{roleName},
			</if>
			<if test="roleDesc != null ">
				#{roleDesc},
			</if>
			<if test="createdBy != null ">
				#{createdBy},
			</if>
			<if test="roleLevel != null ">
				#{roleLevel},
			</if>
		</trim>
	</insert>

	<!-- 根据id，修改记录 -->
	<update id="update" parameterType="Object">
		update BASE_ROLE set
		<trim suffixOverrides=",">
			update_time = now(),
			<if test="roleName != null ">
				role_name = #{roleName},
			</if>
			<if test="roleDesc != null ">
				role_desc = #{roleDesc},
			</if>
			<if test="updatedBy != null ">
				updated_by = #{updatedBy},
			</if>
			<if test="roleLevel != null ">
				role_level = #{roleLevel},
			</if>
		</trim>
		where id = #{id}
	</update>

	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete from BASE_ROLE where id = #{id}
	</delete>

	<!-- 根据id查询 -->
	<select id="queryById" resultMap="BaseResultMap" parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from BASE_ROLE where id = #{id}
	</select>

	<!-- 列表总数 -->
	<select id="queryByCount" resultType="java.lang.Integer"
		parameterType="Object">
		select count(1) from BASE_ROLE
		<include refid="Example_Where_Clause" />
	</select>

	<!-- 查询列表 -->
	<select id="queryByList" resultMap="BaseResultMap"
		parameterType="Object">
		select
		<include refid="Base_Column_List" />
		from BASE_ROLE
		<include refid="Example_Where_Clause" />
		<if test="pager.orderCondition == '' ">
			order by create_time desc
		</if>
		<if test="pager.orderCondition != null and pager.orderCondition != ''">
			${pager.orderCondition}
		</if>
		<if
			test="pager.mysqlQueryCondition != null and pager.mysqlQueryCondition != ''">
			${pager.mysqlQueryCondition}
		</if>
	</select>
	<!-- *************************************自定义接口****************************************************** -->

	<!-- 查询所有角色 -->
	<select id="queryAllRole" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from BASE_ROLE
	</select>

	<select id="queryRoleByUser" resultMap="BaseResultMap" parameterType="Object">
		SELECT * FROM base_role br
		WHERE br.id IN(SELECT rel.role_id FROM base_role_rel rel 
		WHERE rel.obj_id=#{userId} AND rel.rel_type=1)
		limit 1
	</select>
	<select id="queryRoleAboutLevel" resultMap="BaseResultMap" parameterType="Object">
		SELECT * FROM base_role
		WHERE role_level > #{roleLevel}
	</select>
	
	<!-- 根据用户ID查询用户角色扭转对象 -->
	<select id="queryReverseRole" resultMap="BaseResultMap"  parameterType="java.lang.String">
 		SELECT t1.id,t1.role_name FROM app_process_conf t
		LEFT JOIN base_role t1 ON t1.id = t.process_role_id
		LEFT JOIN base_role_rel t2 ON t.role_id = t2.role_id
		LEFT JOIN base_user t3 ON t3.id = t2.obj_id
		WHERE t.BUSI_TYPE=1 AND t2.REL_TYPE=1 
		<trim>
 			<if test="userId != null and userId != '' ">
 				AND t3.id = #{userId}
 			</if>
 			<if test="dropRoleList != null">
 				 AND t1.id NOT IN 
                   <foreach item="roleId" index="index" collection="dropRoleList"
                 			open="(" separator="," close=")">
            				#{roleId} 
        			</foreach>
 			</if>
 		</trim>
 		GROUP BY t.PROCESS_ROLE_ID
 		order by t.PROCESS_ROLE_ID desc
	</select>
	
	<!-- 判断该登录用户是否各分公司客服 -->
	<select id="queryRoleById" resultMap="BaseResultMap"  parameterType="java.lang.String">
		SELECT * FROM base_role 
		WHERE ROLE_DESC LIKE '%客服%' 
		  AND id = #{userId}
		LIMIT 1
	</select>
</mapper>   
